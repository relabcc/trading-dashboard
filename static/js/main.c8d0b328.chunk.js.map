{"version":3,"sources":["components/ThemeProvider/global-styles.js","components/ThemeProvider/theme.js","components/ThemeProvider/index.js","contexts/mediaQuery/mediaContext.js","contexts/mediaQuery/mqHook.js","contexts/mediaQuery/MediaProvider.js","contexts/header/context.js","contexts/header/Provider.js","components/Box.js","components/Container.js","components/Flex.js","components/Text.js","components/utils/useWebpImage.js","components/BackgroundImage.js","components/Link.js","components/Button.js","contexts/mediaQuery/getResponsiveHelper.js","contexts/mediaQuery/useResponsive.js","containers/Header.js","containers/Layout.js","containers/GrowthScatter/data.csv","components/Charts/ScatterLink.js","components/Charts/Sizer.js","containers/GrowthScatter/index.js","containers/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["css","breakpoints","map","em","responsiveIndex","responsiveMap","_","i","id","findIndex","length","responsive","memoizeOne","args","argsLen","get","containerWidth","containerPadding","font","overrides","fonts","heading","body","mono","colors","theme","primary","secondary","danger","text","headerHeight","customTheme","extendTheme","ReThemeProvider","children","resetCSS","styles","globalStyles","createContext","useMq","bp","useMediaQuery","query","MediaQuery","q","mqHook","Provider","value","hideHeader","setHideHeader","useState","ReBox","styled","Box","Inline","forwardRef","props","ref","as","display","verticalAlign","Absolute","position","FullAbs","top","left","right","bottom","Relative","Fixed","Invisible","width","height","overflow","opacity","Container","defaultProps","mx","px","maxWidth","displayName","ReFlex","Flex","Vertical","direction","ReText","Text","Bold","fontWeight","Thin","range","forEach","key","fontSize","useWebpImage","src","canUseWebp","window","useMemo","isArray","BGImage","pic","backgroundImage","backgroundSize","backgroundPosition","backgroundRepet","BackgroundImage","Link","ReButton","href","p","colorScheme","Secondary","Danger","helper","reduce","r","name","camelCase","useResponsive","useContext","MediaContext","getResponsiveHelper","getCurrentValue","useCallback","resArr","ff","v","Header","siteTitle","bg","alignItems","zIndex","flex","color","Layout","headerContext","minHeight","pt","defaultMargin","getExtent","data","accessor","max","maxBy","min","minBy","ScatterLink","margin","xScaleBase","xScale","yScaleBase","yScale","series","allData","all","x","y","concat","d","xMax","yMax","domain","Grid","stroke","strokeOpacity","AxisBottom","scale","tickFormat","asString","match","format","AxisLeft","Group","j","Line","className","from","to","strokeWidth","Circle","cx","cy","fill","Sizer","ratio","useMeasure","size","useThrottle","React","cloneElement","GrowthScatter","setData","groups","setGroups","activeGroup","setActiveGroup","useEffect","csv","srcData","mapValues","n","Number","isNaN","then","com","compact","groupBy","items","indu","filteredData","console","log","filter","includes","industry","onChange","flexWrap","g","count","m","scaleLog","scaleLinear","spacing","mt","ml","HomePage","isMobile","App","Boolean","location","hostname","ReactDOM","render","ThemeProvider","MediaProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c8d0b328.chunk.js","sourcesContent":["import { css } from '@emotion/react'\n\nexport default css`\n  body {\n    min-width: 100%;\n    min-height: 100%;\n    overflow-y: scroll;\n  }\n\n  img {\n    width: 100%;\n  }\n`;\n","import { theme, extendTheme } from \"@chakra-ui/react\";\r\nimport memoizeOne from 'memoize-one';\r\nimport get from 'lodash/get';\r\n\r\nexport const breakpoints = [30, 48, 62, 80].map(em => em * 16);\r\n\r\nexport const responsiveIndex = [\r\n  [1, 'mobile'],\r\n  [2, 'tablet'],\r\n  [3, 'laptop'],\r\n  [4, 'desktop'],\r\n]\r\n\r\nconst responsiveMap = breakpoints.map((_, i) => {\r\n  const id = responsiveIndex.findIndex(([ri]) => ri + 1 > i)\r\n  return id >= 0 ? id : responsiveIndex.length\r\n})\r\n\r\nexport const responsive = memoizeOne((...args) => {\r\n  const argsLen = args.length\r\n  if (argsLen <= 1) return args[0]\r\n  return breakpoints.map((_, i) => get(args, [responsiveMap[i]], null))\r\n});\r\n\r\nexport const mobileOrDesktop = responsive\r\n\r\nexport const containerWidth = [\"26em\", \"44em\", \"58em\", \"76em\"];\r\nexport const containerPadding = responsive('1em', '2em')\r\n\r\nconst font = 'Arial, \"PingFang TC\", \"HeiTi TC\", \"Microsoft JhengHei\", sans-serif';\r\nconst fonts = {\r\n  heading: font,\r\n  body: font,\r\n  mono: \"Menlo, monospace\",\r\n}\r\n\r\nconst primary = 'blue'\r\nconst secondary = 'green'\r\nconst danger = 'red'\r\n\r\nconst overrides = {\r\n  fonts,\r\n  colors: {\r\n    ...theme.colors,\r\n    primary: get(theme.colors, `${primary}.500`),\r\n    secondary: get(theme.colors, `${secondary}.500`),\r\n    danger: get(theme.colors, `${danger}.500`),\r\n    text: get(theme.colors, 'black'),\r\n  },\r\n  breakpoints,\r\n  containerWidth,\r\n  headerHeight: '5em',\r\n}\r\n\r\nconst customTheme = extendTheme(overrides)\r\n\r\nexport default customTheme\r\n","import React from 'react';\r\nimport { Global } from '@emotion/react'\r\nimport { ChakraProvider } from \"@chakra-ui/react\"\r\n\r\nimport globalStyles from './global-styles';\r\n\r\nimport theme from './theme';\r\n\r\nconst ReThemeProvider = ({ children }) => (\r\n  <ChakraProvider theme={theme} resetCSS>\r\n    <>\r\n      <Global styles={globalStyles} />\r\n      {children}\r\n    </>\r\n  </ChakraProvider>\r\n);\r\n\r\nexport default ReThemeProvider\r\n","import { createContext } from 'react';\r\n\r\nexport default createContext({})\r\n","import { useMediaQuery } from 'react-responsive'\r\n\r\nconst useMq = bp => useMediaQuery({ query: `(min-width: ${bp}px)` })\r\n\r\nexport default useMq\r\n","import React from 'react';\r\n\r\nimport { breakpoints } from '../../components/ThemeProvider/theme';\r\nimport MediaContext from './mediaContext'\r\nimport mqHook from './mqHook'\r\n\r\nconst MediaQuery = ({ children }) => {\r\n  const q = breakpoints.map(mqHook)\r\n  return (\r\n    <MediaContext.Provider value={q}>\r\n      {children}\r\n    </MediaContext.Provider>\r\n  )\r\n}\r\n\r\nexport default MediaQuery;\r\n","import { createContext } from 'react';\r\n\r\nexport default createContext({\r\n  hideHeader: false,\r\n  setHideHeader: () => {},\r\n})\r\n","import React, { useState } from 'react';\r\n\r\nimport Context from './context'\r\n\r\nconst Provider = ({ children }) => {\r\n  const [hideHeader, setHideHeader] = useState()\r\n  return (\r\n    <Context.Provider value={{ hideHeader, setHideHeader }}>\r\n      {children}\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nexport default Provider;\r\n","import React, { forwardRef } from 'react';\r\nimport { Box } from \"@chakra-ui/react\";\r\nimport styled from '@emotion/styled'\r\n\r\nconst ReBox = styled(Box)``\r\n\r\nexport default ReBox\r\n\r\nReBox.Inline = forwardRef((props, ref) => <ReBox as=\"span\" display=\"inline-block\" verticalAlign=\"middle\" {...props} ref={ref} />);\r\nReBox.Absolute = forwardRef((props, ref) => <ReBox position=\"absolute\" {...props} ref={ref} />);\r\nReBox.FullAbs = forwardRef((props, ref) => <ReBox.Absolute top=\"0\" left=\"0\" right=\"0\" bottom=\"0\" {...props} ref={ref} />)\r\nReBox.Relative = forwardRef((props, ref) => <ReBox position=\"relative\" {...props} ref={ref} />)\r\nReBox.Fixed = forwardRef((props, ref) => <ReBox position=\"fixed\" {...props} ref={ref} />)\r\nReBox.Invisible = forwardRef((props, ref) => <ReBox.Absolute width=\"0\" height=\"0\" overflow=\"hidden\" opacity=\"0\" {...props} ref={ref} />)\r\n","import styled from '@emotion/styled';\r\n\r\nimport Box from './Box';\r\nimport { containerWidth, containerPadding } from './ThemeProvider/theme';\r\n\r\nconst Container = styled(Box)``\r\n\r\nContainer.defaultProps = {\r\n  mx: 'auto',\r\n  px: containerPadding,\r\n  maxWidth: containerWidth,\r\n};\r\n\r\nContainer.displayName = 'Container';\r\n\r\nexport default Container;\r\n","import React, { forwardRef } from 'react'\r\nimport { Flex } from \"@chakra-ui/react\";\r\nimport styled from '@emotion/styled'\r\n\r\nconst ReFlex = styled(Flex)``\r\n\r\nReFlex.Vertical = forwardRef((props, ref) => <Flex direction=\"column\" {...props} ref={ref} />)\r\n\r\nexport default ReFlex\r\n","import React, { forwardRef } from 'react';\r\nimport { Text } from \"@chakra-ui/react\";\r\nimport range from 'lodash/range';\r\nimport styled from '@emotion/styled'\r\n\r\nconst ReText = styled(Text)``\r\n\r\nReText.Inline = forwardRef((props, ref) => <ReText as=\"span\" {...props} ref={ref} />);\r\nReText.Bold = forwardRef((props, ref) => <ReText fontWeight=\"700\" {...props} ref={ref} />);\r\nReText.Thin = forwardRef((props, ref) => <ReText fontWeight=\"200\" {...props} ref={ref} />);\r\n\r\nrange(1, 7).forEach((key) => {\r\n  ReText[`H${key}`] = forwardRef((props, ref) => (\r\n    <ReText\r\n      as={`h${key}`}\r\n      fontSize={`${5 - key}xl`}\r\n      {...props}\r\n      ref={ref}\r\n    />\r\n  ));\r\n});\r\n\r\nexport default ReText\r\n","import { useMemo } from 'react';\r\nimport { get, isArray } from 'lodash'\r\n\r\nconst useWebpImage = (src) => {\r\n  const canUseWebp = get(window, 'Modernizr.webp')\r\n\r\n  const pic = useMemo(() => {\r\n    if (!isArray(src)) return null\r\n    return canUseWebp ? src[0] : src[1];\r\n  }, [canUseWebp, src])\r\n\r\n  return pic\r\n}\r\n\r\nexport default useWebpImage\r\n","import React, { forwardRef } from 'react';\r\nimport { isArray } from 'lodash'\r\nimport { AspectRatio } from '@chakra-ui/react';\r\n\r\nimport Box from './Box'\r\nimport useWebpImage from './utils/useWebpImage';\r\n\r\nconst BGImage = ({ src, children, ...props }) => {\r\n  const pic = useWebpImage(src)\r\n\r\n  return (\r\n    <Box\r\n      backgroundImage={`url(${isArray(src) ? pic : src})`}\r\n      {...props}\r\n    >\r\n      {children && (\r\n        <Box.FullAbs>{children}</Box.FullAbs>\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nBGImage.defaultProps = {\r\n  backgroundSize: 'cover',\r\n  backgroundPosition: '50% 50%',\r\n  backgroundRepet: 'no-repeat',\r\n};\r\n\r\nconst BackgroundImage = forwardRef(({\r\n  src,\r\n  children,\r\n  backgroundSize,\r\n  backgroundPosition,\r\n  ...props\r\n}, ref) => (\r\n  <AspectRatio {...props} ref={ref}>\r\n    <BGImage\r\n      src={src}\r\n      backgroundSize={backgroundSize}\r\n      backgroundPosition={backgroundPosition}\r\n    >{children}</BGImage>\r\n  </AspectRatio>\r\n));\r\n\r\nBackgroundImage.displayName = 'BackgroundImage';\r\n\r\nexport default BackgroundImage\r\n","import { Link } from \"@chakra-ui/react\";\r\nimport styled from '@emotion/styled'\r\n\r\nexport default styled(Link)``\r\n","import React from 'react';\r\nimport { Button } from \"@chakra-ui/react\";\r\n\r\nimport Link from './Link'\r\n\r\nconst ReButton = ({ href, ...props }) => {\r\n  if (href) return <Button as={p => <Link {...p} href={href} />} {...props} />\r\n  return <Button {...props} />\r\n}\r\n\r\nReButton.defaultProps = {\r\n  colorScheme: 'blue',\r\n}\r\n\r\nReButton.Secondary = props => (\r\n  <ReButton colorScheme=\"green\" {...props} />\r\n)\r\n\r\nReButton.Danger = props => (\r\n  <ReButton colorScheme=\"red\" {...props} />\r\n)\r\n\r\nexport default ReButton\r\n","import camelCase from 'lodash/camelCase'\r\n\r\nimport { responsiveIndex } from '../../components/ThemeProvider/theme';\r\n\r\nconst helper = q => responsiveIndex.reduce((r, [i, name]) => {\r\n  r[camelCase(`is-${name}`)] = !q[i]\r\n  return r\r\n}, {})\r\n\r\nexport default helper\r\n","import { useContext, useCallback } from 'react'\r\nimport isArray from 'lodash/isArray'\r\n\r\nimport MediaContext from './mediaContext'\r\n\r\nimport getResponsiveHelper from './getResponsiveHelper'\r\nimport { responsive } from '../../components/ThemeProvider/theme';\r\n\r\nconst useResponsive = () => {\r\n  const q = useContext(MediaContext)\r\n  return {\r\n    ...getResponsiveHelper(q),\r\n    responsive,\r\n    getCurrentValue: useCallback((resArr) => {\r\n      if (!isArray(resArr)) {\r\n        return resArr\r\n      }\r\n      let ff = q.findIndex(v => !v) - 1\r\n      if (ff === -2) ff = resArr.length - 1\r\n      while (!resArr[ff] && ff >= 0) {\r\n        ff -= 1\r\n      }\r\n      return resArr[ff]\r\n    }, [q]),\r\n  }\r\n}\r\n\r\nexport default useResponsive\r\n","import React from 'react'\r\nimport { Heading } from \"@chakra-ui/react\";\r\n\r\nimport Box from '../components/Box';\r\nimport Flex from '../components/Flex';\r\n\r\nconst Header = ({ siteTitle, ...props }) => (\r\n  <Flex\r\n    position=\"fixed\"\r\n    bg=\"primary\"\r\n    top={0}\r\n    left={0}\r\n    right={0}\r\n    alignItems=\"center\"\r\n    zIndex=\"docked\"\r\n    {...props}\r\n  >\r\n    <Box px=\"1em\" flex={1}>\r\n      <Heading as=\"h1\" color=\"white\">\r\n        {siteTitle}\r\n      </Heading>\r\n    </Box>\r\n  </Flex>\r\n)\r\n\r\nexport default Header\r\n","import React, { useContext } from 'react'\nimport PropTypes from 'prop-types'\n\nimport Box from '../components/Box';\nimport theme from '../components/ThemeProvider/theme';\nimport headerContext from '../contexts/header/context'\n\nimport Header from './Header'\n\nconst Layout = ({ children }) => {\n  const { hideHeader } = useContext(headerContext)\n  return (\n    <>\n      {!hideHeader && <Header height={theme.headerHeight} siteTitle=\"Trading Dashboard\" />}\n      <Box minHeight=\"100vh\" pt={!hideHeader && theme.headerHeight}>\n        {children}\n      </Box>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","export default __webpack_public_path__ + \"static/media/data.ca059f3c.csv\";","import { AxisLeft, AxisBottom } from '@visx/axis';\nimport { Grid } from '@visx/grid';\nimport { Group } from '@visx/group'\nimport { Circle, Line } from '@visx/shape'\nimport { maxBy, minBy } from 'lodash';\nimport React, { useMemo } from 'react'\nimport { format } from 'd3-format'\n\nimport Box from '../Box'\n\nconst defaultMargin = { top: 40, right: 10, bottom: 30, left: 40 };\n\nconst getExtent = (data, accessor) => {\n  const max = maxBy(data, accessor)\n  const min = minBy(data, accessor)\n  if (typeof accessor === 'string') return [min[accessor], max[accessor]]\n  return [accessor(min), accessor(max)]\n}\n\nconst ScatterLink = ({\n  width,\n  height,\n  margin = defaultMargin,\n  xScale: xScaleBase,\n  yScale: yScaleBase,\n  data,\n  series,\n  ...props\n}) => {\n  if (width < 10 || !data || !xScaleBase || !yScaleBase || !series) return null;\n  const allData = series.reduce((all, { x, y }) => all.concat(data.map(d => ({ x: x(d), y: y(d) }))), [])\n  // bounds\n  const xMax = width - margin.left - margin.right;\n  const yMax = height - margin.top - margin.bottom;\n  const xScale = xScaleBase({\n    domain: getExtent(allData, 'x'), // x-coordinate data values\n    range: [margin.left, xMax], // svg x-coordinates, svg x-coordinates increase left to right\n  });\n  const yScale = yScaleBase({\n    domain: getExtent(allData, 'y'), // y-coordinate data values\n    range: [yMax + margin.top, margin.top], // svg y-coordinates, svg y-coordinates increase left to right\n  });\n\n  return (\n    <Box as=\"svg\" width={width} height={height} {...props}>\n       <Grid\n        top={margin.top}\n        left={margin.left}\n        xScale={xScale}\n        yScale={yScale}\n        width={xMax}\n        height={yMax}\n        stroke=\"black\"\n        strokeOpacity={0.1}\n      />\n      <AxisBottom\n        top={margin.top + yScale(0)}\n        left={margin.left}\n        scale={xScale}\n        tickFormat={(v) => {\n          const asString = `${v}`;\n          // label only major ticks\n          return asString.match(/^[.01?[\\]]*$/) ? format(',')(asString) : '';\n        }}\n      />\n      <AxisLeft\n        top={margin.top}\n        left={margin.left}\n        scale={yScale}\n      />\n      <Group>\n        {data.map((d, j) => (\n          <Line\n            key={`line-${j}`}\n            className=\"line\"\n            from={{\n              x: xScale(series[0].x(d)),\n              y: yScale(series[0].y(d)),\n            }}\n            to={{\n              x: xScale(series[1].x(d)),\n              y: yScale(series[1].y(d)),\n            }}\n            stroke=\"black\"\n            strokeWidth={6}\n            opacity={0.15}\n          />\n        ))}\n      </Group>\n      {series.map(({ x, y }, i) => (\n        <Group key={i}>\n          {data.map((d, j) => (\n            <Circle\n              key={`point-${j}`}\n              className=\"dot\"\n              cx={xScale(x(d))}\n              cy={yScale(y(d))}\n              fill={i ? 'red' : 'green'}\n              opacity={0.5}\n              r={4}\n            />\n          ))}\n        </Group>\n      ))}\n    </Box>\n  )\n}\n\nexport default ScatterLink\n","import { AspectRatio } from '@chakra-ui/layout'\nimport React from 'react'\nimport { useMeasure, useThrottle } from 'react-use';\n\nconst Sizer = ({ ratio, children, ...props }) => {\n  const [ref, { width, height }] = useMeasure();\n\n  const size = useThrottle({ width, height });\n\n  return (\n    <AspectRatio ratio={ratio} ref={ref} {...props}>\n      {React.cloneElement(children, size)}\n    </AspectRatio>\n  )\n}\n\nexport default Sizer\n","import React, { useEffect, useMemo, useState } from 'react'\nimport { csv } from 'd3-fetch'\nimport { scaleLinear, scaleLog } from '@visx/scale'\nimport { compact, groupBy, map, mapValues, uniq } from 'lodash'\nimport { Checkbox, CheckboxGroup, Circle, Flex, HStack } from \"@chakra-ui/react\"\n\nimport srcData from './data.csv'\nimport ScatterLink from '../../components/Charts/ScatterLink'\nimport Sizer from '../../components/Charts/Sizer'\nimport Box from '../../components/Box'\nimport Text from '../../components/Text'\n\nconst GrowthScatter = () => {\n  const [data, setData] = useState()\n  const [groups, setGroups] = useState([])\n  const [activeGroup, setActiveGroup] = useState([])\n  useEffect(() => {\n    csv(srcData, (d) => mapValues(d, v => {\n      const n = Number(v)\n      return isNaN(n) ? v : n\n    })).then(d => {\n      const com = compact(d)\n      setData(com)\n      setGroups(map(groupBy(com, 'industry'), (items, indu) => [indu, items.length]))\n    })\n  }, [])\n  const filteredData = useMemo(() => {\n    if (data) {\n      console.log(activeGroup.length)\n      return data && data.filter(d => d['2020_Q3'] > 0 && d['2020_Q4'] > 0 && (activeGroup.length ? activeGroup.includes(d.industry) : true))\n    }\n    return data\n  }, [data, activeGroup])\n  return (\n    <Box p=\"2em\">\n      <CheckboxGroup onChange={setActiveGroup}>\n      <Flex flexWrap=\"wrap\" mx=\"-0.25em\">\n        {groups.map(([g, count]) => (\n          <Box key={g} m=\"0.25em\">\n            <Checkbox value={g}>{g} ({count})</Checkbox>\n          </Box>\n        ))}\n      </Flex>\n      </CheckboxGroup>\n      <Sizer ratio={21 / 7}>\n        <ScatterLink\n          data={filteredData}\n          xScale={scaleLog}\n          yScale={scaleLinear}\n          series={[\n            { x: d => d['2020_Q3'], y: d => d['gr_2020_Q3'] },\n            { x: d => d['2020_Q4'], y: d => d['gr_2020_Q4'] },\n          ]}\n        />\n      </Sizer>\n      <HStack spacing=\"1em\" mt=\"1em\" ml=\"2em\">\n        <HStack>\n          <Circle bg=\"green\" size=\"0.5em\" />\n          <Text>2020Q3</Text>\n        </HStack>\n        <HStack>\n          <Circle bg=\"red\" size=\"0.5em\" />\n          <Text>2020Q4</Text>\n        </HStack>\n      </HStack>\n    </Box>\n  )\n}\n\nexport default GrowthScatter\n","import React from 'react'\nimport { FaThumbsUp, FaHandPeace } from 'react-icons/fa';\nimport { Circle } from '@chakra-ui/react';\n\nimport Container from '../components/Container'\nimport Box from '../components/Box'\nimport Flex from '../components/Flex'\nimport Text from '../components/Text'\nimport BackgroundImage from '../components/BackgroundImage'\nimport Button from '../components/Button'\nimport FullpageVerticalCenter from '../components/FullpageVerticalCenter'\nimport { responsive } from '../components/ThemeProvider/theme';\n\nimport useResponsive from '../contexts/mediaQuery/useResponsive'\n\nimport Layout from './Layout'\nimport GrowthScatter from './GrowthScatter';\n\nconst HomePage = () => {\n  const { isMobile } = useResponsive()\n  return (\n    <Layout>\n      <GrowthScatter />\n    </Layout>\n  )\n}\n\nexport default HomePage\n","import React from 'react';\r\n\r\nimport HomePage from './containers/HomePage'\r\n\r\nfunction App() {\r\n  return (\r\n    <HomePage />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'react-app-polyfill/ie11'\r\nimport 'react-app-polyfill/stable'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport ThemeProvider from './components/ThemeProvider'\r\nimport MediaProvider from './contexts/mediaQuery/MediaProvider'\r\nimport HeaderProvider from './contexts/header/Provider'\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <ThemeProvider>\r\n    <MediaProvider>\r\n      <HeaderProvider>\r\n        <App />\r\n      </HeaderProvider>\r\n    </MediaProvider>\r\n  </ThemeProvider>\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}